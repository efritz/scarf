// Code generated by protoc-gen-go. DO NOT EDIT.
// source: value.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	value.proto

It has these top-level messages:
	Update
	Summary
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Update struct {
	Delta int32 `protobuf:"varint,1,opt,name=delta" json:"delta,omitempty"`
}

func (m *Update) Reset()                    { *m = Update{} }
func (m *Update) String() string            { return proto1.CompactTextString(m) }
func (*Update) ProtoMessage()               {}
func (*Update) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Update) GetDelta() int32 {
	if m != nil {
		return m.Delta
	}
	return 0
}

type Summary struct {
	Updates int32 `protobuf:"varint,1,opt,name=updates" json:"updates,omitempty"`
	Value   int32 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *Summary) Reset()                    { *m = Summary{} }
func (m *Summary) String() string            { return proto1.CompactTextString(m) }
func (*Summary) ProtoMessage()               {}
func (*Summary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Summary) GetUpdates() int32 {
	if m != nil {
		return m.Updates
	}
	return 0
}

func (m *Summary) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto1.RegisterType((*Update)(nil), "proto.Update")
	proto1.RegisterType((*Summary)(nil), "proto.Summary")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ValueService service

type ValueServiceClient interface {
	Subscribe(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (ValueService_SubscribeClient, error)
	QuietUpdate(ctx context.Context, opts ...grpc.CallOption) (ValueService_QuietUpdateClient, error)
	NoisyUpdate(ctx context.Context, opts ...grpc.CallOption) (ValueService_NoisyUpdateClient, error)
}

type valueServiceClient struct {
	cc *grpc.ClientConn
}

func NewValueServiceClient(cc *grpc.ClientConn) ValueServiceClient {
	return &valueServiceClient{cc}
}

func (c *valueServiceClient) Subscribe(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (ValueService_SubscribeClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ValueService_serviceDesc.Streams[0], c.cc, "/proto.ValueService/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &valueServiceSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ValueService_SubscribeClient interface {
	Recv() (*Summary, error)
	grpc.ClientStream
}

type valueServiceSubscribeClient struct {
	grpc.ClientStream
}

func (x *valueServiceSubscribeClient) Recv() (*Summary, error) {
	m := new(Summary)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *valueServiceClient) QuietUpdate(ctx context.Context, opts ...grpc.CallOption) (ValueService_QuietUpdateClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ValueService_serviceDesc.Streams[1], c.cc, "/proto.ValueService/QuietUpdate", opts...)
	if err != nil {
		return nil, err
	}
	x := &valueServiceQuietUpdateClient{stream}
	return x, nil
}

type ValueService_QuietUpdateClient interface {
	Send(*Update) error
	CloseAndRecv() (*Summary, error)
	grpc.ClientStream
}

type valueServiceQuietUpdateClient struct {
	grpc.ClientStream
}

func (x *valueServiceQuietUpdateClient) Send(m *Update) error {
	return x.ClientStream.SendMsg(m)
}

func (x *valueServiceQuietUpdateClient) CloseAndRecv() (*Summary, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Summary)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *valueServiceClient) NoisyUpdate(ctx context.Context, opts ...grpc.CallOption) (ValueService_NoisyUpdateClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ValueService_serviceDesc.Streams[2], c.cc, "/proto.ValueService/NoisyUpdate", opts...)
	if err != nil {
		return nil, err
	}
	x := &valueServiceNoisyUpdateClient{stream}
	return x, nil
}

type ValueService_NoisyUpdateClient interface {
	Send(*Update) error
	Recv() (*Summary, error)
	grpc.ClientStream
}

type valueServiceNoisyUpdateClient struct {
	grpc.ClientStream
}

func (x *valueServiceNoisyUpdateClient) Send(m *Update) error {
	return x.ClientStream.SendMsg(m)
}

func (x *valueServiceNoisyUpdateClient) Recv() (*Summary, error) {
	m := new(Summary)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for ValueService service

type ValueServiceServer interface {
	Subscribe(*google_protobuf.Empty, ValueService_SubscribeServer) error
	QuietUpdate(ValueService_QuietUpdateServer) error
	NoisyUpdate(ValueService_NoisyUpdateServer) error
}

func RegisterValueServiceServer(s *grpc.Server, srv ValueServiceServer) {
	s.RegisterService(&_ValueService_serviceDesc, srv)
}

func _ValueService_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(google_protobuf.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ValueServiceServer).Subscribe(m, &valueServiceSubscribeServer{stream})
}

type ValueService_SubscribeServer interface {
	Send(*Summary) error
	grpc.ServerStream
}

type valueServiceSubscribeServer struct {
	grpc.ServerStream
}

func (x *valueServiceSubscribeServer) Send(m *Summary) error {
	return x.ServerStream.SendMsg(m)
}

func _ValueService_QuietUpdate_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ValueServiceServer).QuietUpdate(&valueServiceQuietUpdateServer{stream})
}

type ValueService_QuietUpdateServer interface {
	SendAndClose(*Summary) error
	Recv() (*Update, error)
	grpc.ServerStream
}

type valueServiceQuietUpdateServer struct {
	grpc.ServerStream
}

func (x *valueServiceQuietUpdateServer) SendAndClose(m *Summary) error {
	return x.ServerStream.SendMsg(m)
}

func (x *valueServiceQuietUpdateServer) Recv() (*Update, error) {
	m := new(Update)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ValueService_NoisyUpdate_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ValueServiceServer).NoisyUpdate(&valueServiceNoisyUpdateServer{stream})
}

type ValueService_NoisyUpdateServer interface {
	Send(*Summary) error
	Recv() (*Update, error)
	grpc.ServerStream
}

type valueServiceNoisyUpdateServer struct {
	grpc.ServerStream
}

func (x *valueServiceNoisyUpdateServer) Send(m *Summary) error {
	return x.ServerStream.SendMsg(m)
}

func (x *valueServiceNoisyUpdateServer) Recv() (*Update, error) {
	m := new(Update)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ValueService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ValueService",
	HandlerType: (*ValueServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Subscribe",
			Handler:       _ValueService_Subscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "QuietUpdate",
			Handler:       _ValueService_QuietUpdate_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "NoisyUpdate",
			Handler:       _ValueService_NoisyUpdate_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "value.proto",
}

func init() { proto1.RegisterFile("value.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0x4b, 0xcc, 0x29,
	0x4d, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x52, 0xd2, 0xe9, 0xf9, 0xf9,
	0xe9, 0x39, 0xa9, 0xfa, 0x60, 0x5e, 0x52, 0x69, 0x9a, 0x7e, 0x6a, 0x6e, 0x41, 0x49, 0x25, 0x44,
	0x8d, 0x92, 0x1c, 0x17, 0x5b, 0x68, 0x41, 0x4a, 0x62, 0x49, 0xaa, 0x90, 0x08, 0x17, 0x6b, 0x4a,
	0x6a, 0x4e, 0x49, 0xa2, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x6b, 0x10, 0x84, 0xa3, 0x64, 0xc9, 0xc5,
	0x1e, 0x5c, 0x9a, 0x9b, 0x9b, 0x58, 0x54, 0x29, 0x24, 0xc1, 0xc5, 0x5e, 0x0a, 0x56, 0x5a, 0x0c,
	0x55, 0x02, 0xe3, 0x82, 0xb4, 0x82, 0xed, 0x95, 0x60, 0x82, 0x68, 0x05, 0x73, 0x8c, 0xd6, 0x32,
	0x72, 0xf1, 0x84, 0x81, 0x58, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9, 0x42, 0xe6, 0x5c, 0x9c,
	0xc1, 0xa5, 0x49, 0xc5, 0xc9, 0x45, 0x99, 0x49, 0xa9, 0x42, 0x62, 0x7a, 0x10, 0x67, 0xe9, 0xc1,
	0x9c, 0xa5, 0xe7, 0x0a, 0x72, 0x96, 0x14, 0x1f, 0x44, 0x40, 0x0f, 0x6a, 0xab, 0x12, 0x83, 0x01,
	0xa3, 0x90, 0x01, 0x17, 0x77, 0x60, 0x69, 0x66, 0x6a, 0x09, 0xd4, 0xa5, 0xbc, 0x50, 0x25, 0x10,
	0x2e, 0xa6, 0x0e, 0x0d, 0x46, 0x21, 0x23, 0x2e, 0x6e, 0xbf, 0xfc, 0xcc, 0xe2, 0x4a, 0xa2, 0x75,
	0x18, 0x30, 0x26, 0xb1, 0x81, 0x05, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x51, 0x4f, 0x8e,
	0x23, 0x44, 0x01, 0x00, 0x00,
}
